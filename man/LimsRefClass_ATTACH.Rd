% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lims.R
\name{LimsRefClass_ATTACH}
\alias{LimsRefClass_ATTACH}
\title{ATTACH a file - not really a RESTful action but a combination of steps}
\arguments{
\item{x}{ProcessRefClass or ProjectRefClass to attach to}

\item{filename}{character, the fully qualified name of the file we are pushing
Note that the caller must specify filename = 'some/file/name' explicitly.}

\item{use}{character the type of file transfer to use: duck, scp, cp or curl}
}
\value{
FileRefClass, NULL or ExceptionRefClass
}
\description{
Differs from PUSH as this is not placed into a genealogical placeholder.
but is simple attached to 'Files' tab if such exists as it does for Process
and Project.  Thus there is no DELETE involved like there might be with
a PUSH.
}
\details{
given an [Project,Process] node and a filename
create an unresolved file resource
POST the unresolved file resource to 'glsstore' to get a resolved file resource
Upload the file (scp, cp, or curl)
POST the resolved file resource to 'files'
return the resolved file resource
}
\seealso{
Other Lims: \code{\link{LimsRefClass-class}},
  \code{\link{LimsRefClass_BROWSE}},
  \code{\link{LimsRefClass_DELETE}},
  \code{\link{LimsRefClass_POST}},
  \code{\link{LimsRefClass_PUSH}},
  \code{\link{LimsRefClass_PUT}},
  \code{\link{LimsRefClass_check}},
  \code{\link{LimsRefClass_get_artifactgroups}},
  \code{\link{LimsRefClass_get_byLimsid}},
  \code{\link{LimsRefClass_uri}},
  \code{\link{LimsRefClass_userpwd}},
  \code{\link{LimsRefClass_validate_session}},
  \code{\link{get_NSMAP}}
}

